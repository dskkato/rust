on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

name: Continuous integration

env:
  CARGO_TERM_COLOR: always
  TF_RUST_BUILD_FROM_SRC: false
  # RUSTFLAGS: "-D warnings"  # it needs some works to enable this flag

jobs:
  pre-compile-check:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          # TODO(someone): re-enable the following platforms
          # - macos-latest
          - windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
      - name: Execute version check
        run: ./test-all version-check
        shell: bash
      - name: Execute clippy check
        run: ./test-all clippy-cmd
        shell: bash
      - name: Execute fmt check
        run: ./test-all fmt-cmd
        shell: bash
      - name: Setup Python # Set Python version
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          # TODO(someone): re-enable the following platforms
          # - macos-latest
          - windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
      - name: Execute test check
        run: ./test-all test-cmd
        shell: bash
      - name: Execute doc check
        run: ./test-all doc-cmd
        shell: bash
      - name: Execute attributes check
        run: ./test-all attributes-check
        shell: bash
  examples:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          # TODO(someone): re-enable the following platforms
          # - macos-latest
          - windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
      # Install pip and pytest
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r .github/workflows/requirements.txt
      - name: Execute example check
        run: ./test-all example-cmd
        shell: bash
